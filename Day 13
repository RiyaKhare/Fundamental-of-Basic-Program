//Number of 1 Bits
//Example 1:

Input: n = 00000000000000000000000000001011
Output: 3
Explanation: The input binary string 00000000000000000000000000001011 has a total of three '1' bits.
Example 2:

Input: n = 00000000000000000000000010000000
Output: 1
Explanation: The input binary string 00000000000000000000000010000000 has a total of one '1' bit.
Example 3:

Input: n = 11111111111111111111111111111101
Output: 31
Explanation: The input binary string 11111111111111111111111111111101 has a total of thirty one '1' bits.
//Constraints:

The input must be a binary string of length 32.

//Code-
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int count=0;
        while(n!=0){
            int last_bit= n & 1; //Stores the value of the last bit of the number n i.e.(1 or 0)
            count+= last_bit; // adds 0 if last bit is 0 and adds 1 if last bit is 1 
            n = n>>>1;  //Dropping the last bit of the binary number n 
        }
        return count;
    }
}
